DROP TABLE IF EXISTS users, category, locations, event, participation_request, compilation, compilation_event CASCADE;
CREATE TABLE IF NOT EXISTS event (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(120) NOT NULL,
    annotation VARCHAR(2000) NOT NULL,
    description VARCHAR(7000),
    event_date TIMESTAMP WITHOUT TIME ZONE,
    lat REAL,
    lon REAL,
    initiator_id INT NOT NULL,
    category_id INT NOT NULL,
    paid BOOLEAN NOT NULL,
    participant_limit INT NOT NULL,
    request_moderation boolean NOT NULL,
    state VARCHAR (50) NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_event PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS category(
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT pk_category PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilation(
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN,
    title VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS users(
   id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   email VARCHAR(254) NOT NULL UNIQUE,
   name VARCHAR(250) NOT NULL,
   CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS participation_request(
   id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   created TIMESTAMP WITHOUT TIME ZONE,
   event_id INT NOT NULL,
   requester_id INT NOT NULL,
   status VARCHAR NOT NULL,
   CONSTRAINT pk_participation_request PRIMARY KEY (id),
   CONSTRAINT fk_participation_request_to_user FOREIGN KEY(requester_id) REFERENCES users(id),
   CONSTRAINT fk_participation_request_to_event FOREIGN KEY(event_id) REFERENCES event(id)
);


CREATE TABLE IF NOT EXISTS compilation_event(
   compilation_id INT,
   event_id INT
);